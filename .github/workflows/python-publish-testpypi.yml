name: Publish Python Package - TestPyPI
# This workflow will upload a TestPyPI Python Package using Twine on demand (dispatch)

on: [ workflow_dispatch ]

permissions:
  contents: read

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} - ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10", "3.11"]
#        os: [ubuntu-20.04, windows-2019, macOS-11]
#        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          python -m pip install cibuildwheel==2.12.0

      - name: Build Wheels
        run: python -m cibuildwheel --output-dir wheelhouse

      - name: Publish Test Package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          path: ./wheelhouse/*.whl
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

  test:
    if: success()
    needs: [ build_wheels ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10.x'

      - name: Install Remote Package
        run: |
          scanoss_version=$(python ./version.py)
          pip install -r requirements.txt
          echo "Install TestPyPI scanoss_winnowing ${scanoss_version}..."
          pip install -i https://test.pypi.org/simple/ --upgrade scanoss_winnowing
          pip install --upgrade scanoss

      - name: Run Tests
        run: |
          which scanoss-py
          scanoss-py version
          scanoss-py wfp src > fingers.wfp
          file_count=$(cat fingers.wfp | grep '"file=":' | wc -l)
          echo "File Count: $file_count"
          if [[ $file_count -lt 1 ]]; then
            echo "Error: Fingerprint test did not produce any results. Failing"
            exit 1
          fi
